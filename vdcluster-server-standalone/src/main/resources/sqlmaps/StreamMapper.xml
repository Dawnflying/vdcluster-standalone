<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xh.vdcluster.repository.mapper.StreamMapper">
  <resultMap id="BaseResultMap" type="com.xh.vdcluster.repository.model.Stream">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="protocol" jdbcType="VARCHAR" property="protocol" />
    <result column="ipaddress" jdbcType="VARCHAR" property="ipaddress" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="expiredtime" jdbcType="DATE" property="expiredtime" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, protocol, ipaddress, port, expiredtime, uri
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stream
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stream
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xh.vdcluster.repository.model.Stream" useGeneratedKeys="true" keyProperty="id">
    insert into stream (id, name, protocol, 
      ipaddress, port,
      expiredtime, uri)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{protocol,jdbcType=VARCHAR}, 
      #{ipaddress,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER},
      #{expiredtime,jdbcType=DATE}, #{uri,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.vdcluster.repository.model.Stream">
    insert into stream
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="protocol != null">
        protocol,
      </if>
      <if test="ipaddress != null">
        ipaddress,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="expiredtime != null">
        expiredtime,
      </if>
      <if test="uri != null">
        uri,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null">
        #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null">
        #{ipaddress,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="expiredtime != null">
        #{expiredtime,jdbcType=DATE},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.vdcluster.repository.model.Stream">
    update stream
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="protocol != null">
        protocol = #{protocol,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null">
        ipaddress = #{ipaddress,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="expiredtime != null">
        expiredtime = #{expiredtime,jdbcType=DATE},
      </if>
      <if test="uri != null">
        uri = #{uri,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.vdcluster.repository.model.Stream">
    update stream
    set name = #{name,jdbcType=VARCHAR},
      protocol = #{protocol,jdbcType=VARCHAR},
      ipaddress = #{ipaddress,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      expiredtime = #{expiredtime,jdbcType=DATE},
      uri = #{uri,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="countByUri" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from stream where uri = #{uri,jdbcType=VARCHAR}
  </select>

  <select id="selectByUri" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from stream where uri=#{uri,jdbcType=VARCHAR}
  </select>
</mapper>