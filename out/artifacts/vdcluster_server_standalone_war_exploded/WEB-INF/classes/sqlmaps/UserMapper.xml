<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.vdcluster.repository.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xh.vdcluster.repository.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="modifiedTime" property="modifiedtime" jdbcType="DATE" />
    <result column="grain" property="grain" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, username, password, createtime, modifiedTime, grain
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xh.vdcluster.repository.model.User" >
    insert into user (id, userId, username, 
      password, createtime, modifiedTime, 
      grain)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createtime,jdbcType=DATE}, #{modifiedtime,jdbcType=DATE}, 
      #{grain,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.vdcluster.repository.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="modifiedtime != null" >
        modifiedTime,
      </if>
      <if test="grain != null" >
        grain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="modifiedtime != null" >
        #{modifiedtime,jdbcType=DATE},
      </if>
      <if test="grain != null" >
        #{grain,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.vdcluster.repository.model.User" >
    update user
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="modifiedtime != null" >
        modifiedTime = #{modifiedtime,jdbcType=DATE},
      </if>
      <if test="grain != null" >
        grain = #{grain,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.vdcluster.repository.model.User" >
    update user
    set userId = #{userid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=DATE},
      modifiedTime = #{modifiedtime,jdbcType=DATE},
      grain = #{grain,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <select id="getUserByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where userId = #{userid, jdbcType=VARCHAR}
  </select>
</mapper>